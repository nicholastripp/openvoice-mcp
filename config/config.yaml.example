# Home Assistant Realtime Voice Assistant Configuration

# OpenAI Configuration
openai:
  api_key: ${OPENAI_API_KEY}        # From environment variable
  voice: "alloy"                    # alloy, ash, ballad, coral, echo, sage, shimmer, verse
  model: "gpt-4o-mini-realtime-preview"  # OpenAI Realtime model
  temperature: 0.8                  # Response creativity (0.0-1.0)
  language: "en"                    # Language code (en, es, fr, de, etc.)
  
# Home Assistant Configuration  
home_assistant:
  url: ${HA_URL}                          # Your HA instance URL (from .env)
  token: ${HA_TOKEN}                      # Long-lived access token (from .env)
  language: "en"                          # Must match OpenAI language
  timeout: 10                             # API timeout in seconds
  
  # Model Context Protocol (MCP) configuration
  mcp:
    sse_endpoint: "/mcp_server/sse"       # MCP SSE endpoint (default)
    auth_method: "token"                  # Authentication method: "token" or "oauth"
    connection_timeout: 30                # Connection timeout in seconds
    reconnect_attempts: 3                 # Number of reconnection attempts
    ssl_verify: true                      # Verify SSL certificates (set to false for self-signed certs)
    ssl_ca_bundle: null                   # Path to custom CA bundle file (optional)
  
# Audio Configuration
audio:
  input_device: "default"           # Microphone device (name or index)
  output_device: "default"          # Speaker device (name or index)
  sample_rate: 48000               # Device sample rate (48000, 44100, etc.)
  channels: 1                      # Audio channels (1=mono, 2=stereo)
  chunk_size: 1200                 # Audio chunk size (50ms at 24kHz)
  input_volume: 1.0                # Input volume multiplier (0.1-5.0: <1.0 reduces volume, 1.0 = no change, >1.0 amplifies)
  output_volume: 2.0               # Output volume multiplier
  feedback_prevention: true        # Enable audio feedback prevention
  feedback_threshold: 0.1          # Feedback detection threshold
  mute_during_response: true       # Mute microphone during response playback
  
  # Automatic Gain Control (AGC) - automatically adjusts input volume
  agc_enabled: true               # Enable AGC (set to true for automatic volume adjustment)
  agc_target_rms: 0.3             # Target audio level (0.3 = 30% of maximum)
  agc_max_gain: 3.0               # Maximum gain allowed (prevent over-amplification)
  agc_min_gain: 0.1               # Minimum gain allowed (prevent complete muting)
  agc_attack_time: 0.5            # Seconds to reduce gain when clipping detected
  agc_release_time: 2.0           # Seconds to increase gain when too quiet
  agc_clipping_threshold: 0.05    # Maximum acceptable clipping (5% of samples)
  
# Wake Word Configuration
wake_word:
  enabled: true                   # Enable wake word detection
  model: "picovoice"              # Porcupine built-in keyword (see options below)
  sensitivity: 1.0                # Detection sensitivity (0.0-1.0, 1.0 = maximum); try adjusting input volume first
  timeout: 5.0                    # Session timeout after wake word (seconds)
  vad_enabled: false              # Voice activity detection
  cooldown: 2.0                   # Seconds between wake word detections
  test_mode: false                # Test mode (no OpenAI connection)
  confirmation_beep_enabled: false # Play beep after wake word detection (false = quiet operation)
  audio_gain: 1.0                 # Audio amplification factor (1.0-5.0)
  audio_gain_mode: "fixed"        # Gain mode: "fixed" or "dynamic"
  
  # Porcupine-specific configuration
  porcupine_access_key: ${PICOVOICE_ACCESS_KEY}  # From environment variable
  highpass_filter_enabled: true   # High-pass filter (REQUIRED for Porcupine to work properly)
  highpass_filter_cutoff: 80.0    # Filter cutoff frequency in Hz (80Hz removes DC offset/rumble)
  
  # Available Porcupine built-in keywords (use these exact names in 'model' field):
  #   alexa, americano, blueberry, bumblebee, computer, grapefruit,
  #   grasshopper, picovoice, porcupine, terminator
  #
  # Note: Popular wake words like "jarvis", "hey google", "hey siri", "ok google"
  # are NOT built-in and require custom wake word creation at https://console.picovoice.ai/
  #
  # For custom wake words:
  # 1. Create at https://console.picovoice.ai/
  # 2. Download the .ppn file
  # 3. Place in config/wake_words/
  # 4. Set model to the file path
  
# Session Configuration
session:
  timeout: 30                     # Session timeout in seconds
  auto_end_silence: 3.0          # End session after silence (seconds)
  max_duration: 300              # Maximum session duration (seconds)
  interrupt_threshold: 0.5       # Voice activity to interrupt AI
  auto_end_after_response: true  # Auto-end session after response completion
  response_cooldown_delay: 2.0   # Cooldown delay before ending session (seconds)
  
  # Multi-turn conversation settings
  conversation_mode: "multi_turn"  # "single_turn" or "multi_turn"
  multi_turn_timeout: 300.0        # Safety fallback timeout (5 minutes) - conversations end based on silence
  multi_turn_max_turns: 20         # Maximum conversation turns per session
  multi_turn_stuck_multiplier: 4.0 # Multiplier for stuck detection
  extended_silence_threshold: 8.0  # Seconds of silence before ending conversation naturally
  multi_turn_end_phrases:          # Phrases to end multi-turn conversation
    - "goodbye"
    - "stop"
    - "that's all"
    - "thank you"
    - "bye"
  
# System Configuration
system:
  log_level: "INFO"              # File logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  console_log_level: "INFO"      # Console output level (can be different from file)
  log_file: "logs/assistant.log" # Log file path
  log_to_file: true              # Enable/disable file logging
  log_max_size_mb: 10            # Maximum log file size before rotation
  log_backup_count: 3            # Number of rotated log files to keep
  led_gpio: null                 # GPIO pin for status LED (optional)
  daemon: false                  # Run as daemon process
  
# Web UI Configuration (optional)
web_ui:
  enabled: false                # Enable web UI on startup
  host: "0.0.0.0"              # Listen address: 0.0.0.0 for all interfaces, 127.0.0.1 for localhost only
  port: 8443                   # Web UI port (8443 for HTTPS by default)
  
  # Authentication settings
  auth:
    enabled: true              # Require login (highly recommended when host is 0.0.0.0)
    username: "admin"          # Default username
    password_hash: ${WEB_UI_PASSWORD_HASH}  # BCrypt hash from .env (set during install)
    session_timeout: 3600      # Session timeout in seconds (1 hour)
  
  # TLS/HTTPS settings
  tls:
    enabled: true              # Use HTTPS (highly recommended for remote access)
    cert_file: ""              # Path to certificate file (empty = use self-signed)
    key_file: ""               # Path to private key file (empty = use self-signed)
    # Self-signed certificates are generated automatically if cert_file is empty

# Advanced Configuration
advanced:
  reconnect_delay: 5.0          # WebSocket reconnection delay
  max_reconnect_attempts: 10    # Maximum reconnection attempts
  audio_buffer_size: 8192       # Audio buffer size in bytes
  cost_tracking: true           # Track API usage costs
  debug_audio: false            # Save debug audio files
